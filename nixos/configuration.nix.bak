# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:

{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
    ];

  # Bootloader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  networking.hostName = "nixos"; # Define your hostname.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.

  # Configure network proxy if necessary
  # networking.proxy.default = "http://user:password@proxy:port/";
  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

  # Enable networking
  networking.networkmanager.enable = true;

  #Nix Flakes
  nix.settings.experimental-features = [ "nix-command" "flakes" ];

  #ZSH
  users.defaultUserShell=pkgs.zsh;
	programs = {
	   zsh = {
	      enable = true;
	      autosuggestions.enable = true;
	      zsh-autoenv.enable = true;
	      syntaxHighlighting.enable = true;
	      ohMyZsh = {
		 enable = true;
		 theme = "robbyrussell";
		 plugins = [
		   "git"
		   "npm"
		   "history"
		   "node"
		   "rust"
		   "deno"
		 ];
	      };
	   };
	};

# fonts
  fonts.packages = with pkgs; [
  nerdfonts
  noto-fonts
  noto-fonts-cjk
  noto-fonts-emoji
  liberation_ttf
  fira-code
  fira-code-symbols
  mplus-outline-fonts.githubRelease
  dina-font
  proggyfonts
];
  # Hyprland
  programs.hyprland = {
    enable = true;
    xwayland.enable = true;
  };

  #portals for screensharing 
  xdg.portal.enable = true;
  xdg.portal.extraPortals = [ pkgs.xdg-desktop-portal-gtk ];
  
  #enable sound with pipewire
  sound.enable = true;
  security.rtkit.enable = true;
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    jack.enable = true;
  };


  # Set your time zone.
  time.timeZone = "Australia/Sydney";

  # Select internationalisation properties.
  i18n.defaultLocale = "en_AU.UTF-8";

  i18n.extraLocaleSettings = {
    LC_ADDRESS = "en_AU.UTF-8";
    LC_IDENTIFICATION = "en_AU.UTF-8";
    LC_MEASUREMENT = "en_AU.UTF-8";
    LC_MONETARY = "en_AU.UTF-8";
    LC_NAME = "en_AU.UTF-8";
    LC_NUMERIC = "en_AU.UTF-8";
    LC_PAPER = "en_AU.UTF-8";
    LC_TELEPHONE = "en_AU.UTF-8";
    LC_TIME = "en_AU.UTF-8";
  };

  # Configure keymap in X11
  services.xserver = {
    layout = "au";
    xkbVariant = "";
  };

  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.yunz = {
    isNormalUser = true;
    description = "Yunus";
    extraGroups = [ "networkmanager" "wheel" ];
    packages = with pkgs; [];
  };

  # Allow unfree packages
  nixpkgs.config.allowUnfree = true;

  # List packages installed in system profile. To search, run:
  # $ nix search wget
  environment.systemPackages = with pkgs; [
  # Hyprland Stuff
  (waybar.overrideAttrs (oldAttrs: {
  mesonFlags = oldAttrs.mesonFlags ++ [ "-Dexperimental=true"];
  })
  )
  dunst #notifcation daemon
  libnotify #notification dependancy
  swww #wallpaper
  rofi-wayland #app finder
  networkmanagerapplet
  wl-clipboard
  themechanger


  # Applications
  kitty
  alacritty
  firefox
  obsidian
  vesktop
  mpv
  pavucontrol
  gnome.nautilus

  # Fetch
  git
  wget
  curl
  sshfs
  unzip

  # CLI applications
  neovim
  bat # better cat
  fastfetch #neofetch
  fzf #fuzzyfinder
  fd # assist fzf
  eza #ls
  thefuck #typo
  zoxide #cd
  yazi
  tmux
  delta
  tldr
  stow
  tree
  lazygit
  bottom
  ripgrep # for telescope

  # DEV
  gnumake
  # rust
  rustup
  gcc
  clang

  ## Java
  jetbrains.idea-ultimate
  jdk

  ## C#
  jetbrains.rider
  dotnetCorePackages.sdk_9_0

  #JS
  nodejs
  
  # python
  python312Packages.pip
  python3


  ];
  
# services.printing = {
#     enable = true;
#     drivers = [ pkgs.gutenprint pkgs.hplip ]; # Include any necessary drivers
#     ppdFiles = [
#       {
#         name = "my_printer";
#         path = "/etc/cups/ppd/Sharp-BP-70M45-ps.ppd";
#       }
#     ];
#   };

  services.printing = {
    enable = true;
    drivers = [ pkgs.gutenprint ];
  };

services.avahi = {
  enable = true;
  nssmdns = true;
  openFirewall = true;
};
  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  # programs.mtr.enable = true;
  # programs.gnupg.agent = {
  #   enable = true;
  #   enableSSHSupport = true;
  # };

  # List services that you want to enable:

  # Enable the OpenSSH daemon.
  # services.openssh.enable = true;

  # Open ports in the firewall.
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
  # networking.firewall.enable = false;

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "24.05"; # Did you read the comment?

}
